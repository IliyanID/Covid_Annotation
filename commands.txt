CREATE TABLE  validated (
   tweet_created varchar(1000),
   id INT UNIQUE,
   tweet_content VARCHAR(1000) UNIQUE,
   eid1 int,
   claim1 varchar(1000),
   stance1 varchar(1000),
   validated_time1 timestamp,
   eid2 int,
   claim2 varchar(1000),
   stance2 varchar(1000),
   validated_time2 timestamp
);

CREATE OR REPLACE TABLE  unvalidated (
   tweet_created varchar(1000),
   id INT NOT NULL AUTO_INCREMENT,
   tweet_content VARCHAR(1000) UNIQUE,
   eid1 int,
   claim1 varchar(1000),
   stance1 varchar(1000),
   validated_time1 timestamp DEFAULT '0000-00-00',
   eid2 int,
   claim2 varchar(1000),
   stance2 varchar(1000),
   validated_time2 timestamp DEFAULT '0000-00-00'
);



CREATE OR REPLACE TRIGGER log_time
BEFORE UPDATE ON unvalidated
FOR EACH ROW
BEGIN
   IF (OLD.claim1 IS NULL AND OLD.stance1 IS NULL 
   AND NEW.claim1 IS NOT NULL AND NEW.stance1 IS NOT NULL)
   THEN 
   SET NEW.validated_time1 = CURRENT_TIMESTAMP; 
   END IF;
   
   IF (OLD.claim2 IS NULL AND OLD.stance2 IS NULL 
   AND NEW.claim2 IS NOT NULL AND NEW.stance2 IS NOT NULL)
   THEN 
   SET NEW.validated_time2 = CURRENT_TIMESTAMP; 

   END IF;
END;

CREATE OR REPLACE TRIGGER check_validated
AFTER UPDATE ON unvalidated
FOR EACH ROW
BEGIN
   IF NEW.eid1 IS NOT NULL 
   AND NEW.claim1 IS NOT NULL 
   AND NEW.stance1 IS NOT NULL 
   AND NEW.eid2 IS NOT NULL 
   AND NEW.claim2 IS NOT NULL 
   AND NEW.stance2 IS NOT NULL 
   THEN 
   INSERT INTO validated SELECT * FROM unvalidated 
   WHERE id = OLD.id; 
   END IF;

END;

